# -*- coding: utf-8 -*-
"""marubatsu.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pxBbbUuheuaeLrGy3u3n00DakObpl9ds
"""

box = [[" ","1","2","3"],["1","?","?","?",],["2","?","?","?"],["3","?","?","?"]]
for i in range(0,4):
    print(box[i])#マスを表示


judge = 0#勝ちか判定
point = 0#2でそろった判定
box_x=0
box_y=0


memory = [[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]#ループしないように行ったとこ記憶、行ったことあるなら１
def reset():#memoryとpointリセット
    global memory
    global point
    memory = [[0,0,0,0],[0,0,0,0,],[0,0,0,0],[0,0,0,0]]
    point = 0


def check():
    global box_x
    global box_y
    while 1:
        try:#数字かどうか
            box_x = int(input("1～3で置きたい列を入力"))
        except  ValueError:
            print("1～3!!!!!!!")
            box_x = int(input("1～3で置きたい列を入力"))

        try:#1～3か判定&数字かどうか
            if box_x<1 or box_x>3:
                box_x=int(input("「1～3」で置きたい列を入力"))
        except  ValueError:
            print("1～3!!!!!!!")
            box_x=int(input("「1～3」で置きたい列を入力"))

        try:#数字かどうか
            box_y = int(input("1～3で置きたい行を入力"))
        except  ValueError:
            print("1～3!!!!!!!")
            box_y = int(input("1～3で置きたい行を入力"))

        try:#1～3か判定&数字かどうか
            if box_y<1 or box_y>3:
                box_y=int(input("「1～3」で置きたい行を入力"))
        except  ValueError:
            print("1～3!!!!!!!")
            box_y=int(input("「1～3」で置きたい行を入力"))
            
        if (box_x == 1
              or box_x == 2
              or box_x == 3):
            if (box_y == 1
                  or box_y == 2
                  or box_y == 3):
                return
        
    if box[box_x][box_y] == "o" or box[box_x][box_y] == "x":#すでにおかれてるマスに置こうとしたとき
        print("すでに置かれています")
        check()


def call(x,y):
    global judge
    global memory
    global point
    cross_right(x,y)
    reset()
    cross_left(x,y)
    reset()
    veritical(x,y)
    reset()
    side(x,y)
    reset()


def put_o(x,y):#oを置く処理
    global judge
    global memory
    global point
    box[x][y]="o"#oを置く
    call(x,y)

    for i in range(0,4):
      print(box[i])#マスを表示


def put_x(x,y):#oのときと同じ仕組みでx置く処理
    global judge
    global memory
    global point
    box[x][y]="x"#xを置く
    call(x,y)

    if judge == 10:#xのときjudgeが10なら20に変えることによってxが勝つ処理行う
      judge = 20

    for i in range(0,4):
      print(box[i])#マスを表示


def cross_left(x,y):#左斜め判定
    global point
    global judge
    global memory
    memory[x][y] = 1#行ったことあることにする
  
    if x-1>0 and y-1>0:#左斜め上が範囲外なら
    
        if memory[x-1][y-1] == 0:#左斜め上が行ったことあるなら
    
            if box[x][y] == box[x-1][y-1]:#左斜め上と同じなら
                point += 1
                cross_left(x-1,y-1)

    if x+1<3 and y+1<4:#右下が範囲外なら
    
        if memory[x+1][y+1] == 0:#右下が行ったことあるなら
    
            if box[x][y] == box[x+1][y+1]:#右下と同じなら
                point += 1
                cross_left(x+1,y+1)

    if point >= 2 :#point２以上なら勝ちにしたい
        judge = 10


def cross_right(x,y):#右ななめ判定
    global point
    global judge
    global memory
    memory[x][y] = 1#行ったことあることにする

    if x-1>0 and y+1<4:#左下が範囲外なら

      if memory[x-1][y+1] == 0:#左下が行ったことあるなら

        if box[x][y] == box[x-1][y+1]:#左下と同じなら
          point += 1
          cross_right(x-1,y+1)

    if x+1>4 and y-1<0:#右上が範囲外なら

       if memory[x+1][y-1] == 0:#右上が行ったことあるなら

          if box[x][y] == box[x+1][y-1]:#右上と同じなら
            point += 1
            cross_right(x+1,y-1)

    if point >= 2:#point２以上なら勝ちにしたい
        judge = 10


def side(x,y):#横判定
    global point
    global judge
    global memory
    memory[x][y] = 1#行ったことあることにする

    if y-1 > 0:#上が範囲外なら

        if memory[x][y-1] == 0:#上が行ったことあるなら

            if box[x][y] == box[x][y-1]:#上と同じなら
                point += 1
                side(x,y-1)

    if y+1 > 4:#下が範囲外なら

        if memory[x][y+1] == 0:#下が行ったことあるなら
        

            if box[x][y] == box[x][y+1]:#下と同じなら
                point += 1
                side(x,y+1)

    if point >= 2:#point２以上なら勝ちにしたい
        judge = 10


def veritical(x,y):#縦判定
    global point
    global judge
    global memory
    memory[x][y] = 1#行ったことあることにする

    if x-1 > 0:#左が範囲外なら

        if memory[x-1][y] == 0:#左が行ったことあるなら

            if box[x][y] == box[x-1][y]:#左と同じなら
                point += 1
                veritical(x-1,y)

    if x+1 < 4:#右が範囲外なら

        if memory[x+1][y] == 0:#右が行ったことあるなら
        
            if box[x][y] == box[x+1][y]:#右と同じなら
                point += 1
                veritical(x+1,y)

    if point >= 2:#point２以上なら勝ちにしたい
        judge = 10


while judge < 5:#最大五回ループ
    point = 0
    judge += 1
    print("oの番")
    check()
    put_o(box_x,box_y)

    if judge < 5:#これで5回目のoで終わる
        print("xの番")
        check()
        put_x(box_x,box_y)


if judge == 10:
  print("oの勝ち")

elif judge == 20:
  print("xの勝ち")

else:
  print("引き分け")